---
on:
  workflow_call:

env:
  PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

jobs:
  x86_64:
    runs-on: [self-hosted, X64, Windows, parallels]
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-10
          - windows-11
          - windows-2016
          - windows-2019
          - windows-2022
        provider:
          - parallels-iso
          - qemu
          - virtualbox-iso
          - vmware-iso
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: iso-availability
        shell: pwsh
        run: Invoke-RestMethod -Method Head -Verbose -Uri $(Get-Content os_pkrvars/$('${{ matrix.os }}'.split('-')[0])/${{ matrix.os }}-x86_64.pkrvars.hcl | ConvertFrom-StringData).iso_url.Trim('"')
      #      - name: Setup Packer
      #        uses: hashicorp/setup-packer@main
      #        with:
      #          version: latest
      - name: Packer Init
        run: packer init -upgrade packer_templates
      - name: Packer FMT
        run: if packer fmt -check -recursive .; then exit 0; else echo "Some packer files need to be formatted, run 'packer fmt -recursive .' to fix"; exit 1; fi
      - name: Packer Validate
        run: packer validate -var-file=os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-x86_64.pkrvars.hcl" packer_templates
      - name: Packer build
        #        run: packer build -timestamp-ui -only=${{ matrix.provider }}.vm -var-file=os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-x86_64.pkrvars.hcl" packer_templates
        run: |
          eval "$(chef shell-init bash)"
          bento build -o ${{ matrix.provider }}.vm os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-x86_64.pkrvars.hcl"
          ls -alh builds
      #      - name: Bento Test
      #        run: |
      #          eval "$(chef shell-init bash)"
      #          bento test
      - name: Remove VM in case of canceled job
        if: cancelled()
        run: |
          VM="$(prlctl list -a | grep ${{ matrix.os }} | cut -d " " -f 1)"
          echo Powering off and deleting any existing VMs named ${{ matrix.os }}*-amd64
          prlctl stop "$VM" --kill 2> /dev/null
          sleep 1
          prlctl delete "$VM" 2> /dev/null
          sleep 2
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.os }}-all-x86_64"
          path: |
            builds
            !builds/uploaded/*
          retention-days: 10
