---
on:
  workflow_call:

env:
  PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

jobs:
  x86_64:
    runs-on: [self-hosted, X64, Windows, parallels]
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: iso-availability
        shell: pwsh
        run: Invoke-RestMethod -Method Head -Verbose -Uri $(Get-Content os_pkrvars/windows/windows-2022-x86_64.pkrvars.hcl | ConvertFrom-StringData).iso_url.Trim('"')
      #      - name: Setup Packer
      #        uses: hashicorp/setup-packer@main
      #        with:
      #          version: latest
      - name: Packer Init
        run: packer init -upgrade packer_templates
      - name: Packer FMT
        run: if packer fmt -check -recursive .; then exit 0; else echo "Some packer files need to be formatted, run 'packer fmt -recursive .' to fix"; exit 1; fi
      - name: Packer Validate
        run: packer validate -var-file=os_pkrvars/windows/windows-2022-x86_64.pkrvars.hcl" packer_templates
      - name: Packer build
        run: |
          eval "$(chef shell-init bash)"
          bento build -o parallels-iso.vm,qemu.vm,virtualbox-iso.vm,vmware-iso.vm --vars "qemu_accelerator=hvf" os_pkrvars/windows/windows-2022-x86_64.pkrvars.hcl"
          ls -alh builds
      #      - name: Bento Test
      #        run: |
      #          eval "$(chef shell-init bash)"
      #          bento test
      - name: Remove VM in case of canceled job (parallels)
        if: cancelled()
        run: |
          VM="$(prlctl list -a | grep windows-2022 | cut -d " " -f 1)"
          echo Powering off and deleting any existing VMs named ${{ matrix.os }}*-amd64
          prlctl stop "$VM" --kill 2> /dev/null
          sleep 1
          prlctl delete "$VM" 2> /dev/null
          sleep 2
      - name: Remove VM in case of canceled job (virtualbox)
        if: cancelled()
        run: |
          echo Powering off and deleting any existing VMs named windows-2022*-amd64
          VBoxManage controlvm windows-2022*-amd64 poweroff --type headless 2> /dev/null
          sleep 1
          VBoxManage unregistervm windows-2022*-amd64 --delete 2> /dev/null
          sleep 2
      - name: Remove VM in case of canceled job (vmware)
        if: cancelled()
        run: |
          echo Powering off and deleting any existing VMs named windows-2022*-amd64
          vmrun -T fusion stop builds/packer-windows-2022*-x86_64-vmware/windows-2022*-amd64.vmx hard 2> /dev/null
          sleep 1
          vmrun -T fusion deleteVM builds/packer-windows-2022*-x86_64-vmware/windows-2022*-amd64.vmx 2> /dev/null
          sleep 2
      - name: Upload build artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "windows-2022-x86_64"
          path: |
            builds
            !builds/uploaded/*
          retention-days: 10
